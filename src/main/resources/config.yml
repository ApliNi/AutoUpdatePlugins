
# 服务器启动完成后等待多长时间开始运行第一次更新 (秒, 修改后需要重启
startupDelay: 64

# 第一次运行完成后以此频率重复运行更新 (秒, 修改后需要重启
startupCycle: 61200 # 17小时

# 插件更新目录, 设置与 bukkit.yml 中的一致
# 注意路径最后一定是 "/"
updatePath: './plugins/update/'

# 下载缓存目录, 无需修改
# 新的 .jar 文件会先下载到缓存目录, 验证完成后再移动到插件更新目录
tempPath: './plugins/AutoUpdatePlugins/temp/'

# 服务器正在运行的插件或文件的目录, 用于哈希检查
filePath: './plugins/'

# 文件完整性检查, 只对 .jar / .zip 等文件有效. 尝试以压缩包的形式打开, 若失败则表示不完整
zipFileCheck: true

# 如果下载后的文件哈希与更新目录中待更新的文件 (或者服务器正在运行的文件) 哈希值一致则不移动到更新目录 (MD5
ignoreDuplicates: true

# 全局禁用证书验证, 修改后需要重启
disableCertificateVerification: false

# 显示完整的更新日志, 可在测试完成后关闭, 关闭后依然会显示错误/警告/开始和完成信息
debugLog: true

# 隐藏配置, 无需修改
#disableLook: false
#disableUpdateCheckIntervalTooLow: false
#bStats: true

# 插件列表
# URL 支持自动下载 `Github, Jenkins, SpigotMC, Modrinth, Bukkit, 鬼斩构建站 v2` 页面的插件, 其他链接将直接下载
# 其中 `Github, Jenkins, Modrinth` 页面可以使用 get 参数下载指定文件
# Github 链接可添加配置 `getPreRelease: true` 来下载最新的预发布版本
list:

### 示例配置 ### 测试时注意 Yaml 格式

#  - file: 'EssentialsX.jar' # Github
#    url: https://github.com/EssentialsX/Essentials
#    get: 'EssentialsX-([0-9.]+)\.jar'  # 如果 Github/Jenkins 发布中存在多个文件, 则需要匹配其中一个, 否则下载第一个 (使用正则表达式

#  - file: 'EssentialsXChat.jar' # 匹配相同发布中的不同文件
#    url: https://github.com/EssentialsX/Essentials
#    get: 'EssentialsXChat-([0-9.]+)\.jar'

#  - file: 'Geyser-Spigot.jar' # URL
#    url: https://download.geysermc.org/v2/projects/geyser/versions/latest/builds/latest/downloads/spigot

#  - file: 'ViaVersion-DEV.jar' # Jenkins
#    url: https://ci.viaversion.com/job/ViaVersion-DEV/

#  - file: 'ViaBackwards-DEV.jar'
#    url: https://ci.viaversion.com/view/ViaBackwards/job/ViaBackwards-DEV/

#  - file: 'CoreProtect.jar' # Modrinth
#    url: https://modrinth.com/plugin/coreprotect/

#  - file: 'UseTranslatedNames翻译物品名.jar'
#    url: https://modrinth.com/plugin/usetranslatednames

#  - file: 'HttpRequests网络请求.jar' # SpigotMC
#    url: https://www.spigotmc.org/resources/http-requests.101253/

#  - file: 'SF4_Slimefun4粘液科技.jar' # 鬼斩构建站 v2
#    url: https://builds.guizhanss.com/StarWishsama/Slimefun4/master

#  - file: 'SF4_FluffyMachines蓬松科技.jar'
#    url: https://builds.guizhanss.com/SlimefunGuguProject/FluffyMachines/master

#  # 可以像这样为每个文件添加配置
#  - file: 'serverConfig.yml'
#    url: 'http://[::]:5212/serverConfig.yml'
#    updatePath: './'     # 设置单独的更新目录
#    filePath: './'       # 设置哈希检查的目录
#    zipFileCheck: false  # 关闭完整性检查


### list 中的所有可用配置 ###
#  String file;              // 文件名称
#  String url;               // 下载链接
#  String tempPath;          // 下载缓存路径, 默认使用全局配置
#  String updatePath;        // 更新存放路径, 默认使用全局配置
#  String filePath;          // 最终安装路径, 默认使用全局配置
#  String get;               // 选择发行版本的正则表达式, 默认选择第一个. 仅限 Github, Jenkins, Modrinth
#  boolean zipFileCheck;     // 启用 zip 文件完整性检查, 默认 true
#  boolean getPreRelease;    // 允许下载预发布版本, 默认 false. 仅限 Github
